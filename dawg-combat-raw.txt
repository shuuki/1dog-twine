//////////////////////////////////////////////////////
start
//////////////////////////////////////////////////////

<<nobr>>
/%a assume dawg already exists in the universe %/

/%a initialize dawg %/
<<set $dawg= {

 name: "dawg",
 dispo: "exploring",

 aggression: 2,
 curiosity: 2,
 boldness: 2,

 health: 8,
 stamina: 4,
 agility: 2,

}>>

<<endnobr>>
you are <<print $dawg.name>>. you have an [[encounter]] while <<print $dawg.dispo>>.
/%a  

some things to think about
friendliness / notoriety
gifts / dialogue
disposition

health, smell of blood
readiness

%/

//////////////////////////////////////////////////////
encounter
//////////////////////////////////////////////////////

<<nobr>>
/%a  initialize bandit %/
<<set $bandit= {

 name: "bandit",

 aggression: random(1, 6),
 curiosity: random(1, 6),
 boldness: random(1, 6),

 health: random(1, 6),
 stamina: random(1, 6),
 agility: random(1, 6)

}>>
<<endnobr>>
you encounter <<print $bandit.name>>.
/%a initiative check, think about  %/
<<if $bandit.agility gt $dawg.agility>>/%a this should randomize if agilities match %/
	<<print $bandit.name>> gets the drop on you.

	[[brace yourself|fight loop 2][$dawg.dispo = "idle"]]
<<else>>
	<<print $bandit.name>> leaves you an opening.

	[[attack|fight loop][$dawg.dispo = "attacking"]]
	[[wait|fight loop][$dawg.dispo = "waiting"]]
	[[flee|fight loop][$dawg.dispo = "fleeing"]]
<<endif>>
/%a
<<print $bandit.name>> with <<print $bandit.aggression>> aggression, <<print $bandit.curiosity>> curiosity, <<print $bandit.boldness>> boldness, <<print $bandit.health>> health, <<print $bandit.stamina>> stamina, <<print $bandit.agility>> agility. vs <<print $dawg.name>> with <<print $dawg.aggression>> aggression, <<print $dawg.curiosity>> curiosity, <<print $dawg.boldness>> boldness, <<print $dawg.health>> health, <<print $dawg.stamina>> stamina, <<print $dawg.agility>> agility.
%/

//////////////////////////////////////////////////////
fight loop 1
//////////////////////////////////////////////////////

/%a life check  %/
<<if $dawg.health gt 0>>

	/%a stamina check  %/
	<<if $dawg.stamina gt 0>>

		/%a attacking check %/
		<<if $dawg.dispo eq "attacking">>
			<<print $dawg.name>> attacks.<<set $dawg.stamina -=1>><br>
			<<set $hit to random(1, 20)>>
			/%a need to implement real combat system math %/
			<<if $hit gt $dawg.agility + $dawg.aggression - $bandit.aggression>>
				attack succeeds!
				<<set $bandit.health -= 1>>
				<<print $bandit.name>>'s health is now <<print $bandit.health>>.
				[[continue|fight loop 2][$dawg.dispo = "idle"]]
			<<else>>
				<p>attack fails!</p>
				[[continue|fight loop 2][$dawg.dispo = "idle"]]
			<<endif>>
		<<endif>>
		/%a end attacking check %/

		/%a start waiting check %/
		<<if $dawg.dispo eq "waiting">>
			<<print $dawg.name>> waits.
			<<set $dawg.stamina += 2>>stamina is now <<print $dawg.stamina>>.
			[[continue|fight loop 2][$dawg.dispo = "idle"]]
		<<endif>>
		/%a end waiting check %/

		/%a fleeing check %/
		<<if $dawg.dispo eq "fleeing">>
			/%a fleeing should relate to bandit curiosity and dawg agility %/
			<<print $dawg.name>> attempts to flee .
			<<set $escape to $bandit.agility + $bandit.boldness>>
			<<if $escape lt $dawg.agility + $dawg.stamina>>
				and succeeds!
				[[continue|outside][$dawg.dispo = "exploring"]]
			<<else>>
				and fails! 
				[[continue|fight loop 2][$dawg.dispo = "idle"]]
			<<endif>>
		<<endif>>
		/%a end fleeing check %/

	/%a if the stamina check fails, this happens  %/
	<<else>>
		<<print $dawg.name>> is exhausted.
		[[continue|fight loop 2][$dawg.dispo = "exhausted"]]
	<<endif>>
	/%a end dawg stamina check section  %/

/%a if the life check fails, this happens  %/
<<else>>
	<<print $dawg.name>> has met [[death]].
<<endif>>
/%a end dawg fight loop %/

//////////////////////////////////////////////////////
fight loop 2
//////////////////////////////////////////////////////

/%a

to do:
- flesh out bandit checks so they are equivalent to dawg checks
- create better behavior for pursuit, does bandit ever decide to leave you alone?
- add choice to kill or leave
- add looting to check the disabled bandit if desired
- make a generic enemy class where bandit gets injected
-- bandit is the generic class, figure out how to make variants and use the same template to avoid boilerplating yourself into oblivion
- think about different kinds of attacks, variable damage
- blood smell mechanic, add max health so blood smell is a percentage of max health, like bubbling ships in homeworld
- 

%/
<<if $bandit.health gt 0>>

<<print $bandit.name>> attacks!<<set $bandit.stamina -=1>>

<<set $hit to random(1, 20)>>

<<if $hit gt $bandit.agility + $bandit.aggression - $dawg.aggression>>

<<print $bandit.name>> hits you!
/%a this should relate to what kind of damage is being dealt, changing "hit" to relevant word %/

<<set $dawg.health -= 1>>your health is now <<print $dawg.health>>
<<else>>
<<print $bandit.name>> missed!
<<endif>>

	<<if $dawg.dispo eq "exhausted">>
		
	<<endif>>
	[[attack|fight loop][$dawg.dispo = "attacking"]]
	[[wait|fight loop][$dawg.dispo = "waiting"]]
	[[flee|fight loop][$dawg.dispo = "fleeing"]]
	<<else>>
		<<print $bandit.name>> has died.
		/%a add options for choosing to kill or not when bandit stamina drops, check to loot or not %/
		[[leave|outside][$dawg.dispo = "exploring"]]
<<endif>>

//////////////////////////////////////////////////////
death
//////////////////////////////////////////////////////

you have perished. your bones will litter the wasteland until they too become dust.

[[restart|Start]]

//////////////////////////////////////////////////////
outside
//////////////////////////////////////////////////////

you made it past <<print $bandit.name>>.

[[continue|between]]

//////////////////////////////////////////////////////
between
//////////////////////////////////////////////////////

<<print $dawg.dispo>>.

[[continue|Start]]

//////////////////////////////////////////////////////
end
//////////////////////////////////////////////////////